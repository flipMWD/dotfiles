#!/bin/bash
# GPLv3

# Use the provided interface, otherwise the device used for the default route.
if [[ -z $INTERFACE ]] && [[ -n $BLOCK_INSTANCE ]]; then
    INTERFACE=$BLOCK_INSTANCE
elif [[ -z $INTERFACE ]]; then
    INTERFACE=$(ip route | awk '/^default/ { print $5 ; exit }')
fi

# Exit if there is no default route
if  [[ -z $INTERFACE ]] ||
    [[ ! -e "/sys/class/net/${INTERFACE}/operstate" ]] ||
    ( [[ ! $TREAT_UNKNOWN_AS_UP = "1" ]] &&
      [[ ! $(cat /sys/class/net/${INTERFACE}/operstate) = "up" ]] )
then
    echo " offline"
    exit 0
fi

# Path to store the old results in /dev/SHaredMemory as a tmpfs
path="/dev/shm/$(basename $0)-${INTERFACE}"

# Grabbing data for each adapter.
read rx < "/sys/class/net/${INTERFACE}/statistics/rx_bytes"
read tx < "/sys/class/net/${INTERFACE}/statistics/tx_bytes"

# Get time
time=$(date +%s)

# Write current data if file does not exist. Do not exit, this will cause
# problems if this file is sourced instead of executed as another process.
if [[ ! -f "${path}" ]]; then
    echo "${time} ${rx} ${tx}" > "${path}"
    chmod 0666 "${path}"
fi

# Read previous state and update data storage
read old < "${path}"
echo "${time} ${rx} ${tx}" > "${path}"

# Parse old data and calc time passed
old=(${old//;/ })
time_diff=$(( $time - ${old[0]} ))

# Sanity check: has a positive amount of time passed
[[ "${time_diff}" -gt 0 ]] || exit

# Calc bytes transferred, and their rate in byte/s
rx_diff=$(( $rx - ${old[1]} ))
tx_diff=$(( $tx - ${old[2]} ))
rx_rate=$(( $rx_diff / $time_diff ))
tx_rate=$(( $tx_diff / $time_diff ))

# Shift by 10 bytes to get KiB/s. If the value is larger than
# 1024^2 = 1048576, then display MiB/s instead

# Incoming
echo -n " "
rx_kib=$(( $rx_rate >> 10 ))
if hash bc 2>/dev/null && [[ "$rx_rate" -gt 1048576 ]]; then
    printf '%sM' "$(echo "scale=1; $rx_kib / 1024" | bc)"
else
    echo -n "${rx_kib}K"
fi

# Delimiter
echo -n "  "

# Outgoing
echo -n " "
tx_kib=$(( $tx_rate >> 10 ))
if hash bc 2>/dev/null && [[ "$tx_rate" -gt 1048576 ]]; then
    printf '%sM\n' "$(echo "scale=1; $tx_kib / 1024" | bc)"
else
    echo "${tx_kib}K"
fi

