#!/bin/sh
# github.com/flipmwd

# User variables
default_directory="$PWD"
default_disk_format="raw"
default_disk_size="20"
default_memory="4"

# Functions
check_path() {
	local input_path

	while :
	do
		printf "> %s: " "$1"
		read -e input_path

		if [ "${input_path::2}" = "~/" ]; then
			input_path="${HOME}/${input_path#\~/}"
		fi

		if [ -d "${input_path%/*}" ]; then
			if [ "${input_path::1}" = "/" ]; then
				return_path="$input_path"
			else
				return_path="${default_directory}/${input_path}"
			fi
			break
		elif [ -z "${input_path%/*}" ]; then
			return_path="${default_directory}/${input_path}"
			break
		else
			echo "* Invalid path."
		fi
	done
}

create_disk_image() {
	local disk_path disk_format disk_size qemu_options

	echo "Creating..."

	check_path "Disk Image"
	disk_path="$return_path"

	printf "> Format [%s]: " "$default_disk_format"
	read disk_format

	printf "> Size in GB [%s]: " "$default_disk_size"
	read disk_size

	printf "> More options [none]: "
	read qemu_options

	exec qemu-img create ${qemu_options} \
		-f "${disk_format:-$default_disk_format}" \
		"${disk_path}.${disk_format:-$default_disk_format}" \
		${disk_size:-$default_disk_size}G
}

install_iso_image() {
	local iso_path disk_path memory qemu_options

	echo "Installing..."

	check_path "ISO Image"
	iso_path="$return_path"

	check_path "Disk Image"
	disk_path="$return_path"

	printf "> Memory in GB [%s]: " "$default_memory"
	read memory

	printf "> More options [none]: "
	read qemu_options

	exec qemu-system-x86_64 -enable-kvm ${qemu_options} \
		-m ${memory:-$default_memory}G \
		-cdrom "${iso_path}" -boot menu=on \
		-drive file="${disk_path}",format="${disk_path##*.}"
}

run_disk_image() {
	local disk_path memory qemu_options

	echo "Running..."

	check_path "Disk Image"
	disk_path="$return_path"

	printf "> Memory in GB [%s]: " "$default_memory"
	read memory

	printf "> More options [none]: "
	read qemu_options

	exec qemu-system-x86_64 -enable-kvm ${qemu_options} \
		-m ${memory:-$default_memory}G \
		-drive file="${disk_path}",format="${disk_path##*.}"
}

# Default
echo "┌────────────┬────────────────────┐"
echo "│ QEMU + KVM │ Interactive Script │"
echo "└────────────┴────────────────────┘"

printf "1) Create | 2) Install | 3) Run: "
read mode_choice

case "$mode_choice" in
	1|c*) create_disk_image     ;;
	2|i*) install_iso_image     ;;
	3|r*) run_disk_image        ;;
	*)    echo "Invalid option."
	      exit 1
esac

