#!/usr/bin/env bash
# Notetaker (github.com/flipMWD)

# Exit script if command or pipeline error is found
set -e

#-------------------------------
# Configuration
#-------------------------------

editor='vim -c "normal G$"'

notes_dir="${NOTEBOOK_DIRECTORY:-$HOME/documents/notebook}"
[[ ! -d $notes_dir ]] && mkdir -p "$notes_dir"

#-------------------------------
# Definition
#-------------------------------

# Input from STDIN, use EDITOR or append arguments
function create_note() {
    local file_name="$1"
    shift

    if [[ $# -eq 0 ]]; then
        if [[ -p '/dev/stdin' ]]; then
            (cat; printf "\n") >> "$file_name"
        else
            eval "$editor" "$file_name"
            [[ -n "$(tail -n1 "$file_name")" ]] && printf "\n" >> "$file_name"
        fi
    else
        printf "%s\n\n" "${*}" >> "$file_name"
    fi
}

function choose_notebook() {
    local file_name all_notebooks chosen_notebook

    file_name="${1#-}"
    all_notebooks=($(ls "$notes_dir"))

    for chosen_notebook in "${all_notebooks[@]}"; do

        if [[ "${chosen_notebook,,}" =~ "${file_name,,}" ]]; then
            shift
            create_note "$notes_dir/$chosen_notebook" "$@"
            exit 0
        fi
    done

    # If there's no matching file in notebooks, create one
    if [[ ! -f "$notes_dir/$file_name" ]]; then
        touch "$notes_dir/$file_name"
        echo -e "Notebook $file_name created.\nRun again to insert the message."
    fi
}

function date_notebook() {
    local date_note month_header date_label bar_top bar_bot

    date_note="$(date +'%Y')_notes"
    month_header="$(date +'%B %Y')"
    date_label="$(date +'[%Y-%m-%d, %a %H:%M]') "

    # Create Header
    if ! grep -q "^│ $month_header │$" "$notes_dir/$date_note" 2>/dev/null; then
        bar_top="┌─${month_header//?/─}─┐"
        bar_bot="└─${month_header//?/─}─┘"
        printf "%s\n│ %s │\n%s\n\n" \
            "$bar_top" "$month_header" "$bar_bot" >> "$notes_dir/$date_note"
    fi

    # Insert Label
    printf "%s" "$date_label" >> "$notes_dir/$date_note"

    # Create General Note
    create_note "$notes_dir/$date_note" "$@"
}

#-------------------------------
# Execution
#-------------------------------

case "$1" in
    -s|--search)
        # tail -n +1 /path/* for all notebooks
        eval cat "$notes_dir/*_notes" | less +G
        exit 0
        ;;
    --*)
        echo 'Notebooks should be prefixed with only one dash: -example'
        exit 1
        ;;
    -*)
        choose_notebook "$@"
        ;;
    *)
        date_notebook "$@"
        ;;
esac

